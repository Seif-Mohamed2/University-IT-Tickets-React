{"ast":null,"code":"var _jsxFileName = \"/Users/seifmohamed/Documents/webdev/TechNotes/front-end/my-app/src/features/students/Student.js\",\n  _s = $RefreshSig$();\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPenToSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { useNavigate } from 'react-router-dom';\nimport { useGetStudentsQuery } from './studentsApiSlice';\nimport { memo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Student = _ref => {\n  _s();\n  let {\n    studentId\n  } = _ref;\n  const {\n    student\n  } = useGetStudentsQuery(\"studentsList\", {\n    selectFromResult: _ref2 => {\n      let {\n        data\n      } = _ref2;\n      return {\n        student: data === null || data === void 0 ? void 0 : data.entities[studentId]\n      };\n    }\n  });\n  const navigate = useNavigate();\n  if (student) {\n    const handleEdit = () => navigate(`/dash/students/${studentId}`);\n    const cellStatus = student.active ? '' : 'table__cell--inactive';\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"table__row user\",\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: `table__cell ${cellStatus}`,\n        children: student.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: `table__cell ${cellStatus}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon-button table__button\",\n          onClick: handleEdit,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPenToSquare\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  } else return null;\n};\n_s(Student, \"4UnPQmS07EHLZBqtZmwNczftMkM=\", false, function () {\n  return [useGetStudentsQuery, useNavigate];\n});\n_c = Student;\nconst memoizedStudent = /*#__PURE__*/memo(Student);\nexport default memoizedStudent;\nvar _c;\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"names":["FontAwesomeIcon","faPenToSquare","useNavigate","useGetStudentsQuery","memo","Student","studentId","student","selectFromResult","data","entities","navigate","handleEdit","cellStatus","active","username","memoizedStudent"],"sources":["/Users/seifmohamed/Documents/webdev/TechNotes/front-end/my-app/src/features/students/Student.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPenToSquare } from \"@fortawesome/free-solid-svg-icons\"\nimport { useNavigate } from 'react-router-dom'\nimport { useGetStudentsQuery } from './studentsApiSlice'\nimport { memo } from 'react'\n\nconst Student = ({ studentId }) => {\n\n    const { student } = useGetStudentsQuery(\"studentsList\", {\n        selectFromResult: ({ data }) => ({\n            student: data?.entities[studentId]\n        }),\n    })\n\n    const navigate = useNavigate()\n\n    if (student) {\n        const handleEdit = () => navigate(`/dash/students/${studentId}`)\n\n        const cellStatus = student.active ? '' : 'table__cell--inactive'\n\n        return (\n            <tr className=\"table__row user\">\n                <td className={`table__cell ${cellStatus}`}>{student.username}</td>\n                <td className={`table__cell ${cellStatus}`}>\n                    <button\n                        className=\"icon-button table__button\"\n                        onClick={handleEdit}\n                    >\n                        <FontAwesomeIcon icon={faPenToSquare} />\n                    </button>\n                </td>\n            </tr>\n        )\n\n    } else return null\n}\n\nconst memoizedStudent = memo(Student)\n\nexport default memoizedStudent"],"mappings":";;AAAA,SAASA,eAAe,QAAQ,gCAAgC;AAChE,SAASC,aAAa,QAAQ,mCAAmC;AACjE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,mBAAmB,QAAQ,oBAAoB;AACxD,SAASC,IAAI,QAAQ,OAAO;AAAA;AAE5B,MAAMC,OAAO,GAAG,QAAmB;EAAA;EAAA,IAAlB;IAAEC;EAAU,CAAC;EAE1B,MAAM;IAAEC;EAAQ,CAAC,GAAGJ,mBAAmB,CAAC,cAAc,EAAE;IACpDK,gBAAgB,EAAE;MAAA,IAAC;QAAEC;MAAK,CAAC;MAAA,OAAM;QAC7BF,OAAO,EAAEE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,QAAQ,CAACJ,SAAS;MACrC,CAAC;IAAA;EACL,CAAC,CAAC;EAEF,MAAMK,QAAQ,GAAGT,WAAW,EAAE;EAE9B,IAAIK,OAAO,EAAE;IACT,MAAMK,UAAU,GAAG,MAAMD,QAAQ,CAAE,kBAAiBL,SAAU,EAAC,CAAC;IAEhE,MAAMO,UAAU,GAAGN,OAAO,CAACO,MAAM,GAAG,EAAE,GAAG,uBAAuB;IAEhE,oBACI;MAAI,SAAS,EAAC,iBAAiB;MAAA,wBAC3B;QAAI,SAAS,EAAG,eAAcD,UAAW,EAAE;QAAA,UAAEN,OAAO,CAACQ;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAM,eACnE;QAAI,SAAS,EAAG,eAAcF,UAAW,EAAE;QAAA,uBACvC;UACI,SAAS,EAAC,2BAA2B;UACrC,OAAO,EAAED,UAAW;UAAA,uBAEpB,QAAC,eAAe;YAAC,IAAI,EAAEX;UAAc;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA;MACnC;QAAA;QAAA;QAAA;MAAA,QACR;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAGb,CAAC,MAAM,OAAO,IAAI;AACtB,CAAC;AAAA,GA9BKI,OAAO;EAAA,QAEWF,mBAAmB,EAMtBD,WAAW;AAAA;AAAA,KAR1BG,OAAO;AAgCb,MAAMW,eAAe,gBAAGZ,IAAI,CAACC,OAAO,CAAC;AAErC,eAAeW,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}