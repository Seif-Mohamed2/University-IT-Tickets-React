{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Plain = void 0;\nconst bson_1 = require(\"../../bson\");\nconst error_1 = require(\"../../error\");\nconst utils_1 = require(\"../../utils\");\nconst auth_provider_1 = require(\"./auth_provider\");\nclass Plain extends auth_provider_1.AuthProvider {\n  auth(authContext, callback) {\n    const {\n      connection,\n      credentials\n    } = authContext;\n    if (!credentials) {\n      return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n    }\n    const username = credentials.username;\n    const password = credentials.password;\n    const payload = new bson_1.Binary(Buffer.from(`\\x00${username}\\x00${password}`));\n    const command = {\n      saslStart: 1,\n      mechanism: 'PLAIN',\n      payload: payload,\n      autoAuthorize: 1\n    };\n    connection.command((0, utils_1.ns)('$external.$cmd'), command, undefined, callback);\n  }\n}\nexports.Plain = Plain;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAEA,MAAaA,KAAM,SAAQC,4BAAY;EAC5BC,IAAI,CAACC,WAAwB,EAAEC,QAAkB;IACxD,MAAM;MAAEC,UAAU;MAAEC;IAAW,CAAE,GAAGH,WAAW;IAC/C,IAAI,CAACG,WAAW,EAAE;MAChB,OAAOF,QAAQ,CAAC,IAAIG,oCAA4B,CAAC,uCAAuC,CAAC,CAAC;;IAE5F,MAAMC,QAAQ,GAAGF,WAAW,CAACE,QAAQ;IACrC,MAAMC,QAAQ,GAAGH,WAAW,CAACG,QAAQ;IAErC,MAAMC,OAAO,GAAG,IAAIC,aAAM,CAACC,MAAM,CAACC,IAAI,CAAC,OAAOL,QAAQ,OAAOC,QAAQ,EAAE,CAAC,CAAC;IACzE,MAAMK,OAAO,GAAG;MACdC,SAAS,EAAE,CAAC;MACZC,SAAS,EAAE,OAAO;MAClBN,OAAO,EAAEA,OAAO;MAChBO,aAAa,EAAE;KAChB;IAEDZ,UAAU,CAACS,OAAO,CAAC,cAAE,EAAC,gBAAgB,CAAC,EAAEA,OAAO,EAAEI,SAAS,EAAEd,QAAQ,CAAC;EACxE;;AAlBFe","names":["Plain","auth_provider_1","auth","authContext","callback","connection","credentials","error_1","username","password","payload","bson_1","Buffer","from","command","saslStart","mechanism","autoAuthorize","undefined","exports"],"sources":["/Users/seifmohamed/Documents/webdev/node_modules/mongodb/src/cmap/auth/plain.ts"],"sourcesContent":["import { Binary } from '../../bson';\nimport { MongoMissingCredentialsError } from '../../error';\nimport { Callback, ns } from '../../utils';\nimport { AuthContext, AuthProvider } from './auth_provider';\n\nexport class Plain extends AuthProvider {\n  override auth(authContext: AuthContext, callback: Callback): void {\n    const { connection, credentials } = authContext;\n    if (!credentials) {\n      return callback(new MongoMissingCredentialsError('AuthContext must provide credentials.'));\n    }\n    const username = credentials.username;\n    const password = credentials.password;\n\n    const payload = new Binary(Buffer.from(`\\x00${username}\\x00${password}`));\n    const command = {\n      saslStart: 1,\n      mechanism: 'PLAIN',\n      payload: payload,\n      autoAuthorize: 1\n    };\n\n    connection.command(ns('$external.$cmd'), command, undefined, callback);\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}