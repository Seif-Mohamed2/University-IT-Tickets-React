{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EstimatedDocumentCountOperation = void 0;\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass EstimatedDocumentCountOperation extends command_1.CommandOperation {\n  constructor(collection) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super(collection, options);\n    this.options = options;\n    this.collectionName = collection.collectionName;\n  }\n  execute(server, session, callback) {\n    const cmd = {\n      count: this.collectionName\n    };\n    if (typeof this.options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = this.options.maxTimeMS;\n    }\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (this.options.comment !== undefined) {\n      cmd.comment = this.options.comment;\n    }\n    super.executeCommand(server, session, cmd, (err, response) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n      callback(undefined, (response === null || response === void 0 ? void 0 : response.n) || 0);\n    });\n  }\n}\nexports.EstimatedDocumentCountOperation = EstimatedDocumentCountOperation;\n(0, operation_1.defineAspects)(EstimatedDocumentCountOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE, operation_1.Aspect.CURSOR_CREATING]);","map":{"version":3,"mappings":";;;;;;AAKA;AACA;AAYA;AACA,MAAaA,+BAAgC,SAAQC,0BAAwB;EAI3EC,YAAYC,UAAsB,EAA6C;IAAA,IAA3CC,8EAAyC,EAAE;IAC7E,KAAK,CAACD,UAAU,EAAEC,OAAO,CAAC;IAC1B,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,cAAc,GAAGF,UAAU,CAACE,cAAc;EACjD;EAESC,OAAO,CACdC,MAAc,EACdC,OAAkC,EAClCC,QAA0B;IAE1B,MAAMC,GAAG,GAAa;MAAEC,KAAK,EAAE,IAAI,CAACN;IAAc,CAAE;IAEpD,IAAI,OAAO,IAAI,CAACD,OAAO,CAACQ,SAAS,KAAK,QAAQ,EAAE;MAC9CF,GAAG,CAACE,SAAS,GAAG,IAAI,CAACR,OAAO,CAACQ,SAAS;;IAGxC;IACA;IACA,IAAI,IAAI,CAACR,OAAO,CAACS,OAAO,KAAKC,SAAS,EAAE;MACtCJ,GAAG,CAACG,OAAO,GAAG,IAAI,CAACT,OAAO,CAACS,OAAO;;IAGpC,KAAK,CAACE,cAAc,CAACR,MAAM,EAAEC,OAAO,EAAEE,GAAG,EAAE,CAACM,GAAG,EAAEC,QAAQ,KAAI;MAC3D,IAAID,GAAG,EAAE;QACPP,QAAQ,CAACO,GAAG,CAAC;QACb;;MAGFP,QAAQ,CAACK,SAAS,EAAE,SAAQ,aAARG,QAAQ,uBAARA,QAAQ,CAAEC,CAAC,KAAI,CAAC,CAAC;IACvC,CAAC,CAAC;EACJ;;AAnCFC;AAsCA,6BAAa,EAACnB,+BAA+B,EAAE,CAC7CoB,kBAAM,CAACC,cAAc,EACrBD,kBAAM,CAACE,SAAS,EAChBF,kBAAM,CAACG,eAAe,CACvB,CAAC","names":["EstimatedDocumentCountOperation","command_1","constructor","collection","options","collectionName","execute","server","session","callback","cmd","count","maxTimeMS","comment","undefined","executeCommand","err","response","n","exports","operation_1","READ_OPERATION","RETRYABLE","CURSOR_CREATING"],"sources":["/Users/seifmohamed/Documents/webdev/node_modules/mongodb/src/operations/estimated_document_count.ts"],"sourcesContent":["import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { CommandOperation, CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport interface EstimatedDocumentCountOptions extends CommandOperationOptions {\n  /**\n   * The maximum amount of time to allow the operation to run.\n   *\n   * This option is sent only if the caller explicitly provides a value. The default is to not send a value.\n   */\n  maxTimeMS?: number;\n}\n\n/** @internal */\nexport class EstimatedDocumentCountOperation extends CommandOperation<number> {\n  override options: EstimatedDocumentCountOptions;\n  collectionName: string;\n\n  constructor(collection: Collection, options: EstimatedDocumentCountOptions = {}) {\n    super(collection, options);\n    this.options = options;\n    this.collectionName = collection.collectionName;\n  }\n\n  override execute(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<number>\n  ): void {\n    const cmd: Document = { count: this.collectionName };\n\n    if (typeof this.options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = this.options.maxTimeMS;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (this.options.comment !== undefined) {\n      cmd.comment = this.options.comment;\n    }\n\n    super.executeCommand(server, session, cmd, (err, response) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(undefined, response?.n || 0);\n    });\n  }\n}\n\ndefineAspects(EstimatedDocumentCountOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.CURSOR_CREATING\n]);\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}