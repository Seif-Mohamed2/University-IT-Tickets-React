{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RunAdminCommandOperation = exports.RunCommandOperation = void 0;\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\n/** @internal */\nclass RunCommandOperation extends command_1.CommandOperation {\n  constructor(parent, command, options) {\n    super(parent, options);\n    this.options = options !== null && options !== void 0 ? options : {};\n    this.command = command;\n  }\n  execute(server, session, callback) {\n    const command = this.command;\n    this.executeCommand(server, session, command, callback);\n  }\n}\nexports.RunCommandOperation = RunCommandOperation;\nclass RunAdminCommandOperation extends RunCommandOperation {\n  constructor(parent, command, options) {\n    super(parent, command, options);\n    this.ns = new utils_1.MongoDBNamespace('admin');\n  }\n}\nexports.RunAdminCommandOperation = RunAdminCommandOperation;","map":{"version":3,"mappings":";;;;;;AAGA;AACA;AAKA;AACA,MAAaA,mBAAkC,SAAQC,0BAAmB;EAIxEC,YAAYC,MAAmC,EAAEC,OAAiB,EAAEC,OAA2B;IAC7F,KAAK,CAACF,MAAM,EAAEE,OAAO,CAAC;IACtB,IAAI,CAACA,OAAO,GAAGA,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,EAAE;IAC5B,IAAI,CAACD,OAAO,GAAGA,OAAO;EACxB;EAESE,OAAO,CACdC,MAAc,EACdC,OAAkC,EAClCC,QAAqB;IAErB,MAAML,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,IAAI,CAACM,cAAc,CAACH,MAAM,EAAEC,OAAO,EAAEJ,OAAO,EAAEK,QAAQ,CAAC;EACzD;;AAjBFE;AAoBA,MAAaC,wBAAuC,SAAQZ,mBAAsB;EAChFE,YAAYC,MAAmC,EAAEC,OAAiB,EAAEC,OAA2B;IAC7F,KAAK,CAACF,MAAM,EAAEC,OAAO,EAAEC,OAAO,CAAC;IAC/B,IAAI,CAACQ,EAAE,GAAG,IAAIC,wBAAgB,CAAC,OAAO,CAAC;EACzC;;AAJFH","names":["RunCommandOperation","command_1","constructor","parent","command","options","execute","server","session","callback","executeCommand","exports","RunAdminCommandOperation","ns","utils_1"],"sources":["/Users/seifmohamed/Documents/webdev/node_modules/mongodb/src/operations/run_command.ts"],"sourcesContent":["import type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { Callback, MongoDBNamespace } from '../utils';\nimport { CommandOperation, CommandOperationOptions, OperationParent } from './command';\n\n/** @public */\nexport type RunCommandOptions = CommandOperationOptions;\n\n/** @internal */\nexport class RunCommandOperation<T = Document> extends CommandOperation<T> {\n  override options: RunCommandOptions;\n  command: Document;\n\n  constructor(parent: OperationParent | undefined, command: Document, options?: RunCommandOptions) {\n    super(parent, options);\n    this.options = options ?? {};\n    this.command = command;\n  }\n\n  override execute(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<T>\n  ): void {\n    const command = this.command;\n    this.executeCommand(server, session, command, callback);\n  }\n}\n\nexport class RunAdminCommandOperation<T = Document> extends RunCommandOperation<T> {\n  constructor(parent: OperationParent | undefined, command: Document, options?: RunCommandOptions) {\n    super(parent, command, options);\n    this.ns = new MongoDBNamespace('admin');\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}