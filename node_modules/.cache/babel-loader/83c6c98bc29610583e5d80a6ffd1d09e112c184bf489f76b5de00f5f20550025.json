{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WaitQueueTimeoutError = exports.PoolClosedError = void 0;\nconst error_1 = require(\"../error\");\n/**\n * An error indicating a connection pool is closed\n * @category Error\n */\nclass PoolClosedError extends error_1.MongoDriverError {\n  constructor(pool) {\n    super('Attempted to check out a connection from closed connection pool');\n    this.address = pool.address;\n  }\n  get name() {\n    return 'MongoPoolClosedError';\n  }\n}\nexports.PoolClosedError = PoolClosedError;\n/**\n * An error thrown when a request to check out a connection times out\n * @category Error\n */\nclass WaitQueueTimeoutError extends error_1.MongoDriverError {\n  constructor(message, address) {\n    super(message);\n    this.address = address;\n  }\n  get name() {\n    return 'MongoWaitQueueTimeoutError';\n  }\n}\nexports.WaitQueueTimeoutError = WaitQueueTimeoutError;","map":{"version":3,"mappings":";;;;;;AAAA;AAGA;;;;AAIA,MAAaA,eAAgB,SAAQC,wBAAgB;EAInDC,YAAYC,IAAoB;IAC9B,KAAK,CAAC,iEAAiE,CAAC;IACxE,IAAI,CAACC,OAAO,GAAGD,IAAI,CAACC,OAAO;EAC7B;EAEA,IAAaC,IAAI;IACf,OAAO,sBAAsB;EAC/B;;AAXFC;AAcA;;;;AAIA,MAAaC,qBAAsB,SAAQN,wBAAgB;EAIzDC,YAAYM,OAAe,EAAEJ,OAAe;IAC1C,KAAK,CAACI,OAAO,CAAC;IACd,IAAI,CAACJ,OAAO,GAAGA,OAAO;EACxB;EAEA,IAAaC,IAAI;IACf,OAAO,4BAA4B;EACrC;;AAXFC","names":["PoolClosedError","error_1","constructor","pool","address","name","exports","WaitQueueTimeoutError","message"],"sources":["/Users/seifmohamed/Documents/webdev/node_modules/mongodb/src/cmap/errors.ts"],"sourcesContent":["import { MongoDriverError } from '../error';\nimport type { ConnectionPool } from './connection_pool';\n\n/**\n * An error indicating a connection pool is closed\n * @category Error\n */\nexport class PoolClosedError extends MongoDriverError {\n  /** The address of the connection pool */\n  address: string;\n\n  constructor(pool: ConnectionPool) {\n    super('Attempted to check out a connection from closed connection pool');\n    this.address = pool.address;\n  }\n\n  override get name(): string {\n    return 'MongoPoolClosedError';\n  }\n}\n\n/**\n * An error thrown when a request to check out a connection times out\n * @category Error\n */\nexport class WaitQueueTimeoutError extends MongoDriverError {\n  /** The address of the connection pool */\n  address: string;\n\n  constructor(message: string, address: string) {\n    super(message);\n    this.address = address;\n  }\n\n  override get name(): string {\n    return 'MongoWaitQueueTimeoutError';\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}