{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbstractCursor = exports.MongoWriteConcernError = exports.MongoUnexpectedServerResponseError = exports.MongoTransactionError = exports.MongoTopologyClosedError = exports.MongoTailableCursorError = exports.MongoSystemError = exports.MongoServerSelectionError = exports.MongoServerError = exports.MongoServerClosedError = exports.MongoRuntimeError = exports.MongoParseError = exports.MongoNotConnectedError = exports.MongoNetworkTimeoutError = exports.MongoNetworkError = exports.MongoMissingDependencyError = exports.MongoMissingCredentialsError = exports.MongoKerberosError = exports.MongoInvalidArgumentError = exports.MongoGridFSStreamError = exports.MongoGridFSChunkError = exports.MongoExpiredSessionError = exports.MongoError = exports.MongoDriverError = exports.MongoDecompressionError = exports.MongoCursorInUseError = exports.MongoCursorExhaustedError = exports.MongoCompatibilityError = exports.MongoChangeStreamError = exports.MongoBatchReExecutionError = exports.MongoAWSError = exports.MongoAPIError = exports.MongoBulkWriteError = exports.ObjectID = exports.ChangeStreamCursor = exports.Timestamp = exports.ObjectId = exports.MinKey = exports.MaxKey = exports.Map = exports.Long = exports.Int32 = exports.Double = exports.Decimal128 = exports.DBRef = exports.Code = exports.BSONSymbol = exports.BSONRegExp = exports.Binary = exports.BSON = void 0;\nexports.ServerHeartbeatFailedEvent = exports.ServerDescriptionChangedEvent = exports.ServerClosedEvent = exports.ConnectionReadyEvent = exports.ConnectionPoolMonitoringEvent = exports.ConnectionPoolCreatedEvent = exports.ConnectionPoolClosedEvent = exports.ConnectionPoolClearedEvent = exports.ConnectionCreatedEvent = exports.ConnectionClosedEvent = exports.ConnectionCheckOutStartedEvent = exports.ConnectionCheckOutFailedEvent = exports.ConnectionCheckedOutEvent = exports.ConnectionCheckedInEvent = exports.CommandSucceededEvent = exports.CommandStartedEvent = exports.CommandFailedEvent = exports.WriteConcern = exports.ReadPreference = exports.ReadConcern = exports.TopologyType = exports.ServerType = exports.ReadPreferenceMode = exports.ReadConcernLevel = exports.ProfilingLevel = exports.ReturnDocument = exports.BSONType = exports.ServerApiVersion = exports.LoggerLevel = exports.ExplainVerbosity = exports.MongoErrorLabel = exports.AutoEncryptionLoggerLevel = exports.CURSOR_FLAGS = exports.Compressor = exports.AuthMechanism = exports.GSSAPICanonicalizationValue = exports.BatchType = exports.Promise = exports.MongoClient = exports.Logger = exports.ListIndexesCursor = exports.ListCollectionsCursor = exports.GridFSBucket = exports.FindCursor = exports.Db = exports.Collection = exports.ChangeStream = exports.CancellationToken = exports.AggregationCursor = exports.Admin = void 0;\nexports.SrvPollingEvent = exports.TopologyOpeningEvent = exports.TopologyDescriptionChangedEvent = exports.TopologyClosedEvent = exports.ServerOpeningEvent = exports.ServerHeartbeatSucceededEvent = exports.ServerHeartbeatStartedEvent = void 0;\nconst admin_1 = require(\"./admin\");\nObject.defineProperty(exports, \"Admin\", {\n  enumerable: true,\n  get: function () {\n    return admin_1.Admin;\n  }\n});\nconst bson_1 = require(\"./bson\");\nconst change_stream_1 = require(\"./change_stream\");\nObject.defineProperty(exports, \"ChangeStream\", {\n  enumerable: true,\n  get: function () {\n    return change_stream_1.ChangeStream;\n  }\n});\nconst collection_1 = require(\"./collection\");\nObject.defineProperty(exports, \"Collection\", {\n  enumerable: true,\n  get: function () {\n    return collection_1.Collection;\n  }\n});\nconst abstract_cursor_1 = require(\"./cursor/abstract_cursor\");\nObject.defineProperty(exports, \"AbstractCursor\", {\n  enumerable: true,\n  get: function () {\n    return abstract_cursor_1.AbstractCursor;\n  }\n});\nconst aggregation_cursor_1 = require(\"./cursor/aggregation_cursor\");\nObject.defineProperty(exports, \"AggregationCursor\", {\n  enumerable: true,\n  get: function () {\n    return aggregation_cursor_1.AggregationCursor;\n  }\n});\nconst find_cursor_1 = require(\"./cursor/find_cursor\");\nObject.defineProperty(exports, \"FindCursor\", {\n  enumerable: true,\n  get: function () {\n    return find_cursor_1.FindCursor;\n  }\n});\nconst list_collections_cursor_1 = require(\"./cursor/list_collections_cursor\");\nObject.defineProperty(exports, \"ListCollectionsCursor\", {\n  enumerable: true,\n  get: function () {\n    return list_collections_cursor_1.ListCollectionsCursor;\n  }\n});\nconst list_indexes_cursor_1 = require(\"./cursor/list_indexes_cursor\");\nObject.defineProperty(exports, \"ListIndexesCursor\", {\n  enumerable: true,\n  get: function () {\n    return list_indexes_cursor_1.ListIndexesCursor;\n  }\n});\nconst db_1 = require(\"./db\");\nObject.defineProperty(exports, \"Db\", {\n  enumerable: true,\n  get: function () {\n    return db_1.Db;\n  }\n});\nconst gridfs_1 = require(\"./gridfs\");\nObject.defineProperty(exports, \"GridFSBucket\", {\n  enumerable: true,\n  get: function () {\n    return gridfs_1.GridFSBucket;\n  }\n});\nconst logger_1 = require(\"./logger\");\nObject.defineProperty(exports, \"Logger\", {\n  enumerable: true,\n  get: function () {\n    return logger_1.Logger;\n  }\n});\nconst mongo_client_1 = require(\"./mongo_client\");\nObject.defineProperty(exports, \"MongoClient\", {\n  enumerable: true,\n  get: function () {\n    return mongo_client_1.MongoClient;\n  }\n});\nconst mongo_types_1 = require(\"./mongo_types\");\nObject.defineProperty(exports, \"CancellationToken\", {\n  enumerable: true,\n  get: function () {\n    return mongo_types_1.CancellationToken;\n  }\n});\nconst promise_provider_1 = require(\"./promise_provider\");\nObject.defineProperty(exports, \"Promise\", {\n  enumerable: true,\n  get: function () {\n    return promise_provider_1.PromiseProvider;\n  }\n});\n/** @internal */\nvar bson_2 = require(\"./bson\");\nObject.defineProperty(exports, \"BSON\", {\n  enumerable: true,\n  get: function () {\n    return bson_2.BSON;\n  }\n});\nvar bson_3 = require(\"./bson\");\nObject.defineProperty(exports, \"Binary\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.Binary;\n  }\n});\nObject.defineProperty(exports, \"BSONRegExp\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.BSONRegExp;\n  }\n});\nObject.defineProperty(exports, \"BSONSymbol\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.BSONSymbol;\n  }\n});\nObject.defineProperty(exports, \"Code\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.Code;\n  }\n});\nObject.defineProperty(exports, \"DBRef\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.DBRef;\n  }\n});\nObject.defineProperty(exports, \"Decimal128\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.Decimal128;\n  }\n});\nObject.defineProperty(exports, \"Double\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.Double;\n  }\n});\nObject.defineProperty(exports, \"Int32\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.Int32;\n  }\n});\nObject.defineProperty(exports, \"Long\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.Long;\n  }\n});\nObject.defineProperty(exports, \"Map\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.Map;\n  }\n});\nObject.defineProperty(exports, \"MaxKey\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.MaxKey;\n  }\n});\nObject.defineProperty(exports, \"MinKey\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.MinKey;\n  }\n});\nObject.defineProperty(exports, \"ObjectId\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.ObjectId;\n  }\n});\nObject.defineProperty(exports, \"Timestamp\", {\n  enumerable: true,\n  get: function () {\n    return bson_3.Timestamp;\n  }\n});\nvar change_stream_cursor_1 = require(\"./cursor/change_stream_cursor\");\nObject.defineProperty(exports, \"ChangeStreamCursor\", {\n  enumerable: true,\n  get: function () {\n    return change_stream_cursor_1.ChangeStreamCursor;\n  }\n});\n/**\n * @public\n * @deprecated Please use `ObjectId`\n */\nexports.ObjectID = bson_1.ObjectId;\nvar common_1 = require(\"./bulk/common\");\nObject.defineProperty(exports, \"MongoBulkWriteError\", {\n  enumerable: true,\n  get: function () {\n    return common_1.MongoBulkWriteError;\n  }\n});\nvar error_1 = require(\"./error\");\nObject.defineProperty(exports, \"MongoAPIError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoAPIError;\n  }\n});\nObject.defineProperty(exports, \"MongoAWSError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoAWSError;\n  }\n});\nObject.defineProperty(exports, \"MongoBatchReExecutionError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoBatchReExecutionError;\n  }\n});\nObject.defineProperty(exports, \"MongoChangeStreamError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoChangeStreamError;\n  }\n});\nObject.defineProperty(exports, \"MongoCompatibilityError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoCompatibilityError;\n  }\n});\nObject.defineProperty(exports, \"MongoCursorExhaustedError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoCursorExhaustedError;\n  }\n});\nObject.defineProperty(exports, \"MongoCursorInUseError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoCursorInUseError;\n  }\n});\nObject.defineProperty(exports, \"MongoDecompressionError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoDecompressionError;\n  }\n});\nObject.defineProperty(exports, \"MongoDriverError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoDriverError;\n  }\n});\nObject.defineProperty(exports, \"MongoError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoError;\n  }\n});\nObject.defineProperty(exports, \"MongoExpiredSessionError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoExpiredSessionError;\n  }\n});\nObject.defineProperty(exports, \"MongoGridFSChunkError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoGridFSChunkError;\n  }\n});\nObject.defineProperty(exports, \"MongoGridFSStreamError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoGridFSStreamError;\n  }\n});\nObject.defineProperty(exports, \"MongoInvalidArgumentError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoInvalidArgumentError;\n  }\n});\nObject.defineProperty(exports, \"MongoKerberosError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoKerberosError;\n  }\n});\nObject.defineProperty(exports, \"MongoMissingCredentialsError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoMissingCredentialsError;\n  }\n});\nObject.defineProperty(exports, \"MongoMissingDependencyError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoMissingDependencyError;\n  }\n});\nObject.defineProperty(exports, \"MongoNetworkError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoNetworkError;\n  }\n});\nObject.defineProperty(exports, \"MongoNetworkTimeoutError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoNetworkTimeoutError;\n  }\n});\nObject.defineProperty(exports, \"MongoNotConnectedError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoNotConnectedError;\n  }\n});\nObject.defineProperty(exports, \"MongoParseError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoParseError;\n  }\n});\nObject.defineProperty(exports, \"MongoRuntimeError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoRuntimeError;\n  }\n});\nObject.defineProperty(exports, \"MongoServerClosedError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoServerClosedError;\n  }\n});\nObject.defineProperty(exports, \"MongoServerError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoServerError;\n  }\n});\nObject.defineProperty(exports, \"MongoServerSelectionError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoServerSelectionError;\n  }\n});\nObject.defineProperty(exports, \"MongoSystemError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoSystemError;\n  }\n});\nObject.defineProperty(exports, \"MongoTailableCursorError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoTailableCursorError;\n  }\n});\nObject.defineProperty(exports, \"MongoTopologyClosedError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoTopologyClosedError;\n  }\n});\nObject.defineProperty(exports, \"MongoTransactionError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoTransactionError;\n  }\n});\nObject.defineProperty(exports, \"MongoUnexpectedServerResponseError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoUnexpectedServerResponseError;\n  }\n});\nObject.defineProperty(exports, \"MongoWriteConcernError\", {\n  enumerable: true,\n  get: function () {\n    return error_1.MongoWriteConcernError;\n  }\n});\n// enums\nvar common_2 = require(\"./bulk/common\");\nObject.defineProperty(exports, \"BatchType\", {\n  enumerable: true,\n  get: function () {\n    return common_2.BatchType;\n  }\n});\nvar gssapi_1 = require(\"./cmap/auth/gssapi\");\nObject.defineProperty(exports, \"GSSAPICanonicalizationValue\", {\n  enumerable: true,\n  get: function () {\n    return gssapi_1.GSSAPICanonicalizationValue;\n  }\n});\nvar providers_1 = require(\"./cmap/auth/providers\");\nObject.defineProperty(exports, \"AuthMechanism\", {\n  enumerable: true,\n  get: function () {\n    return providers_1.AuthMechanism;\n  }\n});\nvar compression_1 = require(\"./cmap/wire_protocol/compression\");\nObject.defineProperty(exports, \"Compressor\", {\n  enumerable: true,\n  get: function () {\n    return compression_1.Compressor;\n  }\n});\nvar abstract_cursor_2 = require(\"./cursor/abstract_cursor\");\nObject.defineProperty(exports, \"CURSOR_FLAGS\", {\n  enumerable: true,\n  get: function () {\n    return abstract_cursor_2.CURSOR_FLAGS;\n  }\n});\nvar deps_1 = require(\"./deps\");\nObject.defineProperty(exports, \"AutoEncryptionLoggerLevel\", {\n  enumerable: true,\n  get: function () {\n    return deps_1.AutoEncryptionLoggerLevel;\n  }\n});\nvar error_2 = require(\"./error\");\nObject.defineProperty(exports, \"MongoErrorLabel\", {\n  enumerable: true,\n  get: function () {\n    return error_2.MongoErrorLabel;\n  }\n});\nvar explain_1 = require(\"./explain\");\nObject.defineProperty(exports, \"ExplainVerbosity\", {\n  enumerable: true,\n  get: function () {\n    return explain_1.ExplainVerbosity;\n  }\n});\nvar logger_2 = require(\"./logger\");\nObject.defineProperty(exports, \"LoggerLevel\", {\n  enumerable: true,\n  get: function () {\n    return logger_2.LoggerLevel;\n  }\n});\nvar mongo_client_2 = require(\"./mongo_client\");\nObject.defineProperty(exports, \"ServerApiVersion\", {\n  enumerable: true,\n  get: function () {\n    return mongo_client_2.ServerApiVersion;\n  }\n});\nvar mongo_types_2 = require(\"./mongo_types\");\nObject.defineProperty(exports, \"BSONType\", {\n  enumerable: true,\n  get: function () {\n    return mongo_types_2.BSONType;\n  }\n});\nvar find_and_modify_1 = require(\"./operations/find_and_modify\");\nObject.defineProperty(exports, \"ReturnDocument\", {\n  enumerable: true,\n  get: function () {\n    return find_and_modify_1.ReturnDocument;\n  }\n});\nvar set_profiling_level_1 = require(\"./operations/set_profiling_level\");\nObject.defineProperty(exports, \"ProfilingLevel\", {\n  enumerable: true,\n  get: function () {\n    return set_profiling_level_1.ProfilingLevel;\n  }\n});\nvar read_concern_1 = require(\"./read_concern\");\nObject.defineProperty(exports, \"ReadConcernLevel\", {\n  enumerable: true,\n  get: function () {\n    return read_concern_1.ReadConcernLevel;\n  }\n});\nvar read_preference_1 = require(\"./read_preference\");\nObject.defineProperty(exports, \"ReadPreferenceMode\", {\n  enumerable: true,\n  get: function () {\n    return read_preference_1.ReadPreferenceMode;\n  }\n});\nvar common_3 = require(\"./sdam/common\");\nObject.defineProperty(exports, \"ServerType\", {\n  enumerable: true,\n  get: function () {\n    return common_3.ServerType;\n  }\n});\nObject.defineProperty(exports, \"TopologyType\", {\n  enumerable: true,\n  get: function () {\n    return common_3.TopologyType;\n  }\n});\n// Helper classes\nvar read_concern_2 = require(\"./read_concern\");\nObject.defineProperty(exports, \"ReadConcern\", {\n  enumerable: true,\n  get: function () {\n    return read_concern_2.ReadConcern;\n  }\n});\nvar read_preference_2 = require(\"./read_preference\");\nObject.defineProperty(exports, \"ReadPreference\", {\n  enumerable: true,\n  get: function () {\n    return read_preference_2.ReadPreference;\n  }\n});\nvar write_concern_1 = require(\"./write_concern\");\nObject.defineProperty(exports, \"WriteConcern\", {\n  enumerable: true,\n  get: function () {\n    return write_concern_1.WriteConcern;\n  }\n});\n// events\nvar command_monitoring_events_1 = require(\"./cmap/command_monitoring_events\");\nObject.defineProperty(exports, \"CommandFailedEvent\", {\n  enumerable: true,\n  get: function () {\n    return command_monitoring_events_1.CommandFailedEvent;\n  }\n});\nObject.defineProperty(exports, \"CommandStartedEvent\", {\n  enumerable: true,\n  get: function () {\n    return command_monitoring_events_1.CommandStartedEvent;\n  }\n});\nObject.defineProperty(exports, \"CommandSucceededEvent\", {\n  enumerable: true,\n  get: function () {\n    return command_monitoring_events_1.CommandSucceededEvent;\n  }\n});\nvar connection_pool_events_1 = require(\"./cmap/connection_pool_events\");\nObject.defineProperty(exports, \"ConnectionCheckedInEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionCheckedInEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionCheckedOutEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionCheckedOutEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionCheckOutFailedEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionCheckOutFailedEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionCheckOutStartedEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionCheckOutStartedEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionClosedEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionClosedEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionCreatedEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionCreatedEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionPoolClearedEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionPoolClearedEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionPoolClosedEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionPoolClosedEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionPoolCreatedEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionPoolCreatedEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionPoolMonitoringEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionPoolMonitoringEvent;\n  }\n});\nObject.defineProperty(exports, \"ConnectionReadyEvent\", {\n  enumerable: true,\n  get: function () {\n    return connection_pool_events_1.ConnectionReadyEvent;\n  }\n});\nvar events_1 = require(\"./sdam/events\");\nObject.defineProperty(exports, \"ServerClosedEvent\", {\n  enumerable: true,\n  get: function () {\n    return events_1.ServerClosedEvent;\n  }\n});\nObject.defineProperty(exports, \"ServerDescriptionChangedEvent\", {\n  enumerable: true,\n  get: function () {\n    return events_1.ServerDescriptionChangedEvent;\n  }\n});\nObject.defineProperty(exports, \"ServerHeartbeatFailedEvent\", {\n  enumerable: true,\n  get: function () {\n    return events_1.ServerHeartbeatFailedEvent;\n  }\n});\nObject.defineProperty(exports, \"ServerHeartbeatStartedEvent\", {\n  enumerable: true,\n  get: function () {\n    return events_1.ServerHeartbeatStartedEvent;\n  }\n});\nObject.defineProperty(exports, \"ServerHeartbeatSucceededEvent\", {\n  enumerable: true,\n  get: function () {\n    return events_1.ServerHeartbeatSucceededEvent;\n  }\n});\nObject.defineProperty(exports, \"ServerOpeningEvent\", {\n  enumerable: true,\n  get: function () {\n    return events_1.ServerOpeningEvent;\n  }\n});\nObject.defineProperty(exports, \"TopologyClosedEvent\", {\n  enumerable: true,\n  get: function () {\n    return events_1.TopologyClosedEvent;\n  }\n});\nObject.defineProperty(exports, \"TopologyDescriptionChangedEvent\", {\n  enumerable: true,\n  get: function () {\n    return events_1.TopologyDescriptionChangedEvent;\n  }\n});\nObject.defineProperty(exports, \"TopologyOpeningEvent\", {\n  enumerable: true,\n  get: function () {\n    return events_1.TopologyOpeningEvent;\n  }\n});\nvar srv_polling_1 = require(\"./sdam/srv_polling\");\nObject.defineProperty(exports, \"SrvPollingEvent\", {\n  enumerable: true,\n  get: function () {\n    return srv_polling_1.SrvPollingEvent;\n  }\n});","map":{"version":3,"mappings":"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","names":["Object","enumerable","get","admin_1","change_stream_1","collection_1","abstract_cursor_1","aggregation_cursor_1","find_cursor_1","list_collections_cursor_1","list_indexes_cursor_1","db_1","gridfs_1","logger_1","mongo_client_1","mongo_types_1","promise_provider_1","exports","bson_1"],"sources":["/Users/seifmohamed/Documents/webdev/node_modules/mongodb/src/index.ts"],"sourcesContent":["import { Admin } from './admin';\nimport { ObjectId } from './bson';\nimport { ChangeStream } from './change_stream';\nimport { Collection } from './collection';\nimport { AbstractCursor } from './cursor/abstract_cursor';\nimport { AggregationCursor } from './cursor/aggregation_cursor';\nimport { FindCursor } from './cursor/find_cursor';\nimport { ListCollectionsCursor } from './cursor/list_collections_cursor';\nimport { ListIndexesCursor } from './cursor/list_indexes_cursor';\nimport { Db } from './db';\nimport { GridFSBucket } from './gridfs';\nimport { Logger } from './logger';\nimport { MongoClient } from './mongo_client';\nimport { CancellationToken } from './mongo_types';\nimport { PromiseProvider } from './promise_provider';\n\n/** @internal */\nexport { BSON } from './bson';\nexport {\n  Binary,\n  BSONRegExp,\n  BSONSymbol,\n  Code,\n  DBRef,\n  Decimal128,\n  Double,\n  Int32,\n  Long,\n  Map,\n  MaxKey,\n  MinKey,\n  ObjectId,\n  Timestamp\n} from './bson';\nexport { ChangeStreamCursor } from './cursor/change_stream_cursor';\n/**\n * @public\n * @deprecated Please use `ObjectId`\n */\nexport const ObjectID = ObjectId;\n\nexport { AnyBulkWriteOperation, BulkWriteOptions, MongoBulkWriteError } from './bulk/common';\nexport {\n  MongoAPIError,\n  MongoAWSError,\n  MongoBatchReExecutionError,\n  MongoChangeStreamError,\n  MongoCompatibilityError,\n  MongoCursorExhaustedError,\n  MongoCursorInUseError,\n  MongoDecompressionError,\n  MongoDriverError,\n  MongoError,\n  MongoExpiredSessionError,\n  MongoGridFSChunkError,\n  MongoGridFSStreamError,\n  MongoInvalidArgumentError,\n  MongoKerberosError,\n  MongoMissingCredentialsError,\n  MongoMissingDependencyError,\n  MongoNetworkError,\n  MongoNetworkTimeoutError,\n  MongoNotConnectedError,\n  MongoParseError,\n  MongoRuntimeError,\n  MongoServerClosedError,\n  MongoServerError,\n  MongoServerSelectionError,\n  MongoSystemError,\n  MongoTailableCursorError,\n  MongoTopologyClosedError,\n  MongoTransactionError,\n  MongoUnexpectedServerResponseError,\n  MongoWriteConcernError\n} from './error';\nexport {\n  AbstractCursor,\n  // Actual driver classes exported\n  Admin,\n  AggregationCursor,\n  CancellationToken,\n  ChangeStream,\n  Collection,\n  Db,\n  FindCursor,\n  GridFSBucket,\n  ListCollectionsCursor,\n  ListIndexesCursor,\n  Logger,\n  MongoClient,\n  // Utils\n  PromiseProvider as Promise\n};\n\n// enums\nexport { BatchType } from './bulk/common';\nexport { GSSAPICanonicalizationValue } from './cmap/auth/gssapi';\nexport { AuthMechanism } from './cmap/auth/providers';\nexport { Compressor } from './cmap/wire_protocol/compression';\nexport { CURSOR_FLAGS } from './cursor/abstract_cursor';\nexport { AutoEncryptionLoggerLevel } from './deps';\nexport { MongoErrorLabel } from './error';\nexport { ExplainVerbosity } from './explain';\nexport { LoggerLevel } from './logger';\nexport { ServerApiVersion } from './mongo_client';\nexport { BSONType } from './mongo_types';\nexport { ReturnDocument } from './operations/find_and_modify';\nexport { ProfilingLevel } from './operations/set_profiling_level';\nexport { ReadConcernLevel } from './read_concern';\nexport { ReadPreferenceMode } from './read_preference';\nexport { ServerType, TopologyType } from './sdam/common';\n\n// Helper classes\nexport { ReadConcern } from './read_concern';\nexport { ReadPreference } from './read_preference';\nexport { WriteConcern } from './write_concern';\n\n// events\nexport {\n  CommandFailedEvent,\n  CommandStartedEvent,\n  CommandSucceededEvent\n} from './cmap/command_monitoring_events';\nexport {\n  ConnectionCheckedInEvent,\n  ConnectionCheckedOutEvent,\n  ConnectionCheckOutFailedEvent,\n  ConnectionCheckOutStartedEvent,\n  ConnectionClosedEvent,\n  ConnectionCreatedEvent,\n  ConnectionPoolClearedEvent,\n  ConnectionPoolClosedEvent,\n  ConnectionPoolCreatedEvent,\n  ConnectionPoolMonitoringEvent,\n  ConnectionReadyEvent\n} from './cmap/connection_pool_events';\nexport {\n  ServerClosedEvent,\n  ServerDescriptionChangedEvent,\n  ServerHeartbeatFailedEvent,\n  ServerHeartbeatStartedEvent,\n  ServerHeartbeatSucceededEvent,\n  ServerOpeningEvent,\n  TopologyClosedEvent,\n  TopologyDescriptionChangedEvent,\n  TopologyOpeningEvent\n} from './sdam/events';\nexport { SrvPollingEvent } from './sdam/srv_polling';\n\n// type only exports below, these are removed from emitted JS\nexport type { AdminPrivate } from './admin';\nexport type { BSONSerializeOptions, Document } from './bson';\nexport type { deserialize, serialize } from './bson';\nexport type {\n  BulkResult,\n  BulkWriteOperationError,\n  BulkWriteResult,\n  DeleteManyModel,\n  DeleteOneModel,\n  InsertOneModel,\n  ReplaceOneModel,\n  UpdateManyModel,\n  UpdateOneModel,\n  WriteConcernError,\n  WriteError\n} from './bulk/common';\nexport type {\n  Batch,\n  BulkOperationBase,\n  BulkOperationPrivate,\n  FindOperators,\n  WriteConcernErrorData\n} from './bulk/common';\nexport type { OrderedBulkOperation } from './bulk/ordered';\nexport type { UnorderedBulkOperation } from './bulk/unordered';\nexport type {\n  ChangeStreamCollModDocument,\n  ChangeStreamCreateDocument,\n  ChangeStreamCreateIndexDocument,\n  ChangeStreamDeleteDocument,\n  ChangeStreamDocument,\n  ChangeStreamDocumentCollectionUUID,\n  ChangeStreamDocumentCommon,\n  ChangeStreamDocumentKey,\n  ChangeStreamDocumentOperationDescription,\n  ChangeStreamDropDatabaseDocument,\n  ChangeStreamDropDocument,\n  ChangeStreamDropIndexDocument,\n  ChangeStreamEvents,\n  ChangeStreamInsertDocument,\n  ChangeStreamInvalidateDocument,\n  ChangeStreamNameSpace,\n  ChangeStreamOptions,\n  ChangeStreamRefineCollectionShardKeyDocument,\n  ChangeStreamRenameDocument,\n  ChangeStreamReplaceDocument,\n  ChangeStreamReshardCollectionDocument,\n  ChangeStreamShardCollectionDocument,\n  ChangeStreamUpdateDocument,\n  OperationTime,\n  PipeOptions,\n  ResumeOptions,\n  ResumeToken,\n  UpdateDescription\n} from './change_stream';\nexport type {\n  AuthMechanismProperties,\n  MongoCredentials,\n  MongoCredentialsOptions\n} from './cmap/auth/mongo_credentials';\nexport type {\n  BinMsg,\n  MessageHeader,\n  Msg,\n  OpMsgOptions,\n  OpQueryOptions,\n  OpResponseOptions,\n  Query,\n  Response,\n  WriteProtocolMessageType\n} from './cmap/commands';\nexport type { LEGAL_TCP_SOCKET_OPTIONS, LEGAL_TLS_SOCKET_OPTIONS, Stream } from './cmap/connect';\nexport type {\n  CommandOptions,\n  Connection,\n  ConnectionEvents,\n  ConnectionOptions,\n  DestroyOptions,\n  GetMoreOptions,\n  ProxyOptions,\n  QueryOptions\n} from './cmap/connection';\nexport type {\n  CloseOptions,\n  ConnectionPool,\n  ConnectionPoolEvents,\n  ConnectionPoolOptions,\n  PoolState,\n  WaitQueueMember,\n  WithConnectionCallback\n} from './cmap/connection_pool';\nexport type {\n  MessageStream,\n  MessageStreamOptions,\n  OperationDescription\n} from './cmap/message_stream';\nexport type { ConnectionPoolMetrics } from './cmap/metrics';\nexport type { StreamDescription, StreamDescriptionOptions } from './cmap/stream_description';\nexport type { CompressorName } from './cmap/wire_protocol/compression';\nexport type { CollectionOptions, CollectionPrivate, ModifyResult } from './collection';\nexport type { MONGO_CLIENT_EVENTS } from './constants';\nexport type {\n  AbstractCursorEvents,\n  AbstractCursorOptions,\n  CursorCloseOptions,\n  CursorFlag,\n  CursorStreamOptions\n} from './cursor/abstract_cursor';\nexport type { InternalAbstractCursorOptions } from './cursor/abstract_cursor';\nexport type { AggregationCursorOptions } from './cursor/aggregation_cursor';\nexport type {\n  ChangeStreamAggregateRawResult,\n  ChangeStreamCursorOptions\n} from './cursor/change_stream_cursor';\nexport type { DbOptions, DbPrivate } from './db';\nexport type { AutoEncrypter, AutoEncryptionOptions, AutoEncryptionTlsOptions } from './deps';\nexport type { Encrypter, EncrypterOptions } from './encrypter';\nexport type { AnyError, ErrorDescription, MongoNetworkErrorOptions } from './error';\nexport type { Explain, ExplainOptions, ExplainVerbosityLike } from './explain';\nexport type {\n  GridFSBucketReadStream,\n  GridFSBucketReadStreamOptions,\n  GridFSBucketReadStreamOptionsWithRevision,\n  GridFSBucketReadStreamPrivate,\n  GridFSFile\n} from './gridfs/download';\nexport type { GridFSBucketEvents, GridFSBucketOptions, GridFSBucketPrivate } from './gridfs/index';\nexport type {\n  GridFSBucketWriteStream,\n  GridFSBucketWriteStreamOptions,\n  GridFSChunk\n} from './gridfs/upload';\nexport type { LoggerFunction, LoggerOptions } from './logger';\nexport type {\n  Auth,\n  DriverInfo,\n  MongoClientEvents,\n  MongoClientOptions,\n  MongoClientPrivate,\n  MongoOptions,\n  PkFactory,\n  ServerApi,\n  SupportedNodeConnectionOptions,\n  SupportedSocketOptions,\n  SupportedTLSConnectionOptions,\n  SupportedTLSSocketOptions,\n  WithSessionCallback\n} from './mongo_client';\nexport type {\n  CommonEvents,\n  EventsDescription,\n  GenericListener,\n  TypedEventEmitter\n} from './mongo_types';\nexport type {\n  AcceptedFields,\n  AddToSetOperators,\n  AlternativeType,\n  ArrayElement,\n  ArrayOperator,\n  BitwiseFilter,\n  BSONTypeAlias,\n  Condition,\n  EnhancedOmit,\n  Filter,\n  FilterOperations,\n  FilterOperators,\n  Flatten,\n  InferIdType,\n  IntegerType,\n  IsAny,\n  Join,\n  KeysOfAType,\n  KeysOfOtherType,\n  MatchKeysAndValues,\n  NestedPaths,\n  NestedPathsOfType,\n  NonObjectIdLikeDocument,\n  NotAcceptedFields,\n  NumericType,\n  OneOrMore,\n  OnlyFieldsOfType,\n  OptionalId,\n  OptionalUnlessRequiredId,\n  Projection,\n  ProjectionOperators,\n  PropertyType,\n  PullAllOperator,\n  PullOperator,\n  PushOperator,\n  RegExpOrString,\n  RootFilterOperators,\n  SchemaMember,\n  SetFields,\n  UpdateFilter,\n  WithId,\n  WithoutId\n} from './mongo_types';\nexport type { AddUserOptions, RoleSpecification } from './operations/add_user';\nexport type {\n  AggregateOperation,\n  AggregateOptions,\n  DB_AGGREGATE_COLLECTION\n} from './operations/aggregate';\nexport type {\n  CollationOptions,\n  CommandOperation,\n  CommandOperationOptions,\n  OperationParent\n} from './operations/command';\nexport type { IndexInformationOptions } from './operations/common_functions';\nexport type { CountOptions } from './operations/count';\nexport type { CountDocumentsOptions } from './operations/count_documents';\nexport type {\n  ClusteredCollectionOptions,\n  CreateCollectionOptions,\n  TimeSeriesCollectionOptions\n} from './operations/create_collection';\nexport type { DeleteOptions, DeleteResult, DeleteStatement } from './operations/delete';\nexport type { DistinctOptions } from './operations/distinct';\nexport type { DropCollectionOptions, DropDatabaseOptions } from './operations/drop';\nexport type { EstimatedDocumentCountOptions } from './operations/estimated_document_count';\nexport type { EvalOptions } from './operations/eval';\nexport type { ExecutionResult } from './operations/execute_operation';\nexport type { FindOptions } from './operations/find';\nexport type {\n  FindOneAndDeleteOptions,\n  FindOneAndReplaceOptions,\n  FindOneAndUpdateOptions\n} from './operations/find_and_modify';\nexport type {\n  CreateIndexesOptions,\n  DropIndexesOptions,\n  IndexDescription,\n  IndexDirection,\n  IndexSpecification,\n  ListIndexesOptions\n} from './operations/indexes';\nexport type { InsertManyResult, InsertOneOptions, InsertOneResult } from './operations/insert';\nexport type { CollectionInfo, ListCollectionsOptions } from './operations/list_collections';\nexport type { ListDatabasesOptions, ListDatabasesResult } from './operations/list_databases';\nexport type {\n  FinalizeFunction,\n  MapFunction,\n  MapReduceOptions,\n  ReduceFunction\n} from './operations/map_reduce';\nexport type { AbstractOperation, Hint, OperationOptions } from './operations/operation';\nexport type { ProfilingLevelOptions } from './operations/profiling_level';\nexport type { RemoveUserOptions } from './operations/remove_user';\nexport type { RenameOptions } from './operations/rename';\nexport type { RunCommandOptions } from './operations/run_command';\nexport type { SetProfilingLevelOptions } from './operations/set_profiling_level';\nexport type {\n  CollStats,\n  CollStatsOptions,\n  DbStatsOptions,\n  WiredTigerData\n} from './operations/stats';\nexport type {\n  ReplaceOptions,\n  UpdateOptions,\n  UpdateResult,\n  UpdateStatement\n} from './operations/update';\nexport type { ValidateCollectionOptions } from './operations/validate_collection';\nexport type { ReadConcernLike } from './read_concern';\nexport type {\n  HedgeOptions,\n  ReadPreferenceFromOptions,\n  ReadPreferenceLike,\n  ReadPreferenceLikeOptions,\n  ReadPreferenceOptions\n} from './read_preference';\nexport type { ClusterTime, TimerQueue } from './sdam/common';\nexport type {\n  Monitor,\n  MonitorEvents,\n  MonitorOptions,\n  MonitorPrivate,\n  RTTPinger,\n  RTTPingerOptions\n} from './sdam/monitor';\nexport type { Server, ServerEvents, ServerOptions, ServerPrivate } from './sdam/server';\nexport type {\n  ServerDescription,\n  ServerDescriptionOptions,\n  TagSet,\n  TopologyVersion\n} from './sdam/server_description';\nexport type { ServerSelector } from './sdam/server_selection';\nexport type { SrvPoller, SrvPollerEvents, SrvPollerOptions } from './sdam/srv_polling';\nexport type {\n  ConnectOptions,\n  SelectServerOptions,\n  ServerCapabilities,\n  ServerSelectionCallback,\n  ServerSelectionRequest,\n  Topology,\n  TopologyEvents,\n  TopologyOptions,\n  TopologyPrivate\n} from './sdam/topology';\nexport type { TopologyDescription, TopologyDescriptionOptions } from './sdam/topology_description';\nexport type {\n  ClientSession,\n  ClientSessionEvents,\n  ClientSessionOptions,\n  EndSessionOptions,\n  ServerSession,\n  ServerSessionId,\n  ServerSessionPool,\n  WithTransactionCallback\n} from './sessions';\nexport type { Sort, SortDirection, SortDirectionForCmd, SortForCmd } from './sort';\nexport type { Transaction, TransactionOptions, TxnState } from './transactions';\nexport type {\n  BufferPool,\n  Callback,\n  ClientMetadata,\n  ClientMetadataOptions,\n  EventEmitterWithState,\n  HostAddress,\n  InterruptibleAsyncInterval,\n  MongoDBNamespace\n} from './utils';\nexport type { W, WriteConcernOptions, WriteConcernSettings } from './write_concern';\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}