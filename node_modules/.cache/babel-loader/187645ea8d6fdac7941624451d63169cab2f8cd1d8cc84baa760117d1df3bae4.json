{"ast":null,"code":"import { apiSlice } from \"../../app/api/apiSlice\";\nimport { logOut, setCredentials } from \"./authSlice\";\nexport const authApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    login: builder.mutation({\n      query: credentials => ({\n        url: '/auth',\n        method: 'POST',\n        body: {\n          ...credentials\n        }\n      })\n    }),\n    sendLogout: builder.mutation({\n      query: () => ({\n        url: '/auth/logout',\n        method: 'POST'\n      }),\n      async onQueryStarted(arg, _ref) {\n        let {\n          dispatch,\n          queryFulfilled\n        } = _ref;\n        try {\n          const {\n            data\n          } = await queryFulfilled;\n          console.log(data);\n          dispatch(logOut());\n          setTimeout(() => {\n            dispatch(apiSlice.util.resetApiState());\n          }, 1000);\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    }),\n    refresh: builder.mutation({\n      query: () => ({\n        url: '/auth/refresh',\n        method: 'GET'\n      }),\n      async onQueryStarted(arg, _ref2) {\n        let {\n          dispatch,\n          queryFulfilled\n        } = _ref2;\n        try {\n          const {\n            data\n          } = await queryFulfilled;\n          console.log(data);\n          const {\n            accessToken\n          } = data;\n          dispatch(setCredentials({\n            accessToken\n          }));\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    })\n  })\n});\nexport const {\n  useLoginMutation,\n  useSendLogoutMutation,\n  useRefreshMutation\n} = authApiSlice;","map":{"version":3,"names":["apiSlice","logOut","setCredentials","authApiSlice","injectEndpoints","endpoints","builder","login","mutation","query","credentials","url","method","body","sendLogout","onQueryStarted","arg","dispatch","queryFulfilled","data","console","log","setTimeout","util","resetApiState","err","refresh","accessToken","useLoginMutation","useSendLogoutMutation","useRefreshMutation"],"sources":["H:/webdev/University-IT-Tickets-/front-end/my-app/src/features/auth/authApiSlice.js"],"sourcesContent":["import { apiSlice } from \"../../app/api/apiSlice\"\r\nimport { logOut, setCredentials } from \"./authSlice\"\r\n\r\nexport const authApiSlice = apiSlice.injectEndpoints({\r\n    endpoints: builder => ({\r\n        login: builder.mutation({\r\n            query: credentials => ({\r\n                url: '/auth',\r\n                method: 'POST',\r\n                body: { ...credentials }\r\n            })\r\n        }),\r\n        sendLogout: builder.mutation({\r\n            query: () => ({\r\n                url: '/auth/logout',\r\n                method: 'POST',\r\n            }),\r\n            async onQueryStarted(arg, { dispatch, queryFulfilled }) {\r\n                try {\r\n                    const { data } = await queryFulfilled\r\n                    console.log(data)\r\n                    dispatch(logOut())\r\n                    setTimeout(() => {\r\n                        dispatch(apiSlice.util.resetApiState())\r\n                    }, 1000)\r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n            }\r\n        }),\r\n        refresh: builder.mutation({\r\n            query: () => ({\r\n                url: '/auth/refresh',\r\n                method: 'GET',\r\n            }),\r\n            async onQueryStarted(arg, { dispatch, queryFulfilled }) {\r\n                try {\r\n                    const { data } = await queryFulfilled\r\n                    console.log(data)\r\n                    const {accessToken} = data\r\n                    dispatch(setCredentials({accessToken}))\r\n                    \r\n                } catch (err) {\r\n                    console.log(err)\r\n                }\r\n            }\r\n\r\n        }),\r\n    })\r\n})\r\n\r\nexport const {\r\n    useLoginMutation,\r\n    useSendLogoutMutation,\r\n    useRefreshMutation,\r\n} = authApiSlice "],"mappings":"AAAA,SAASA,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,MAAM,EAAEC,cAAc,QAAQ,aAAa;AAEpD,OAAO,MAAMC,YAAY,GAAGH,QAAQ,CAACI,eAAe,CAAC;EACjDC,SAAS,EAAEC,OAAO,KAAK;IACnBC,KAAK,EAAED,OAAO,CAACE,QAAQ,CAAC;MACpBC,KAAK,EAAEC,WAAW,KAAK;QACnBC,GAAG,EAAE,OAAO;QACZC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE;UAAE,GAAGH;QAAY;MAC3B,CAAC;IACL,CAAC,CAAC;IACFI,UAAU,EAAER,OAAO,CAACE,QAAQ,CAAC;MACzBC,KAAK,EAAE,OAAO;QACVE,GAAG,EAAE,cAAc;QACnBC,MAAM,EAAE;MACZ,CAAC,CAAC;MACF,MAAMG,cAAc,CAACC,GAAG,QAAgC;QAAA,IAA9B;UAAEC,QAAQ;UAAEC;QAAe,CAAC;QAClD,IAAI;UACA,MAAM;YAAEC;UAAK,CAAC,GAAG,MAAMD,cAAc;UACrCE,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;UACjBF,QAAQ,CAAChB,MAAM,EAAE,CAAC;UAClBqB,UAAU,CAAC,MAAM;YACbL,QAAQ,CAACjB,QAAQ,CAACuB,IAAI,CAACC,aAAa,EAAE,CAAC;UAC3C,CAAC,EAAE,IAAI,CAAC;QACZ,CAAC,CAAC,OAAOC,GAAG,EAAE;UACVL,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;QACpB;MACJ;IACJ,CAAC,CAAC;IACFC,OAAO,EAAEpB,OAAO,CAACE,QAAQ,CAAC;MACtBC,KAAK,EAAE,OAAO;QACVE,GAAG,EAAE,eAAe;QACpBC,MAAM,EAAE;MACZ,CAAC,CAAC;MACF,MAAMG,cAAc,CAACC,GAAG,SAAgC;QAAA,IAA9B;UAAEC,QAAQ;UAAEC;QAAe,CAAC;QAClD,IAAI;UACA,MAAM;YAAEC;UAAK,CAAC,GAAG,MAAMD,cAAc;UACrCE,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;UACjB,MAAM;YAACQ;UAAW,CAAC,GAAGR,IAAI;UAC1BF,QAAQ,CAACf,cAAc,CAAC;YAACyB;UAAW,CAAC,CAAC,CAAC;QAE3C,CAAC,CAAC,OAAOF,GAAG,EAAE;UACVL,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;QACpB;MACJ;IAEJ,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EACTG,gBAAgB;EAChBC,qBAAqB;EACrBC;AACJ,CAAC,GAAG3B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}