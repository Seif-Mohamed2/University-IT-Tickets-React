{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nconst baseQuery = fetchBaseQuery({\n  baseUrl: 'http://localhost:3500',\n  credentials: 'include',\n  prepareHeaders: (headers, _ref) => {\n    let {\n      getState\n    } = _ref;\n    const token = getState().auth.token;\n    if (token) {\n      headers.set(\"authorization\", `Bearer ${token}`);\n    }\n    return headers;\n  }\n});\nexport const apiSlice = createApi({\n  baseQuery,\n  tagTypes: [\"Note\", \"User\"],\n  endpoints: builder => ({})\n});","map":{"version":3,"names":["createApi","fetchBaseQuery","baseQuery","baseUrl","credentials","prepareHeaders","headers","getState","token","auth","set","apiSlice","tagTypes","endpoints","builder"],"sources":["/Users/seifmohamed/Documents/webdev/TechNotes/front-end/my-app/src/app/api/apiSlice.js"],"sourcesContent":["import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/query/react\";\n\nconst baseQuery = fetchBaseQuery({\n    baseUrl: 'http://localhost:3500',\n    credentials: 'include',\n    prepareHeaders: (headers, { getState }) => {\n        const token = getState().auth.token\n\n        if (token) {\n            headers.set(\"authorization\", `Bearer ${token}`)\n        }\n        return headers\n    }\n})\n\nexport const apiSlice = createApi({\n    baseQuery,\n    tagTypes: [\"Note\", \"User\"],\n    endpoints: builder => ({})\n});"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,cAAc,QAAO,8BAA8B;AAEtE,MAAMC,SAAS,GAAGD,cAAc,CAAC;EAC7BE,OAAO,EAAE,uBAAuB;EAChCC,WAAW,EAAE,SAAS;EACtBC,cAAc,EAAE,CAACC,OAAO,WAAmB;IAAA,IAAjB;MAAEC;IAAS,CAAC;IAClC,MAAMC,KAAK,GAAGD,QAAQ,EAAE,CAACE,IAAI,CAACD,KAAK;IAEnC,IAAIA,KAAK,EAAE;MACPF,OAAO,CAACI,GAAG,CAAC,eAAe,EAAG,UAASF,KAAM,EAAC,CAAC;IACnD;IACA,OAAOF,OAAO;EAClB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMK,QAAQ,GAAGX,SAAS,CAAC;EAC9BE,SAAS;EACTU,QAAQ,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EAC1BC,SAAS,EAAEC,OAAO,KAAK,CAAC,CAAC;AAC7B,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}