{"ast":null,"code":"var _jsxFileName = \"/Users/seifmohamed/Documents/webdev/TechNotes/front-end/my-app/src/features/students/StudentsList.js\",\n  _s = $RefreshSig$();\nimport { useGetStudentsQuery } from \"./studentsApiSlice\";\nimport Student from './Student';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentsList = () => {\n  _s();\n  const {\n    data: students,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetStudentsQuery(\"studentsList\", {\n    pollingInterval: 60000,\n    refetchOnFocus: true,\n    refetchOnMountOrArgChange: true\n  });\n  let content;\n  if (isLoading) content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 30\n  }, this);\n  if (isError) {\n    var _error$data;\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errmsg\",\n      children: error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }, this);\n  }\n  if (isSuccess) {\n    const {\n      ids\n    } = students;\n    const tableContent = ids !== null && ids !== void 0 && ids.length ? ids.map(studentId => /*#__PURE__*/_jsxDEV(Student, {\n      studentId: studentId\n    }, studentId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 36\n    }, this)) : null;\n    content = /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table--users\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table__thead\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th user__username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th user__edit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n  return content;\n};\n_s(StudentsList, \"RX8RcAEKg9W5PmwKQGLgI87AyDU=\", false, function () {\n  return [useGetStudentsQuery];\n});\n_c = StudentsList;\nexport default StudentsList;\nvar _c;\n$RefreshReg$(_c, \"StudentsList\");","map":{"version":3,"names":["useGetStudentsQuery","Student","StudentsList","data","students","isLoading","isSuccess","isError","error","pollingInterval","refetchOnFocus","refetchOnMountOrArgChange","content","message","ids","tableContent","length","map","studentId"],"sources":["/Users/seifmohamed/Documents/webdev/TechNotes/front-end/my-app/src/features/students/StudentsList.js"],"sourcesContent":["import { useGetStudentsQuery } from \"./studentsApiSlice\"\nimport Student from './Student'\n\nconst StudentsList = () => {\n\n    const {\n        data: students,\n        isLoading,\n        isSuccess,\n        isError,\n        error\n    } = useGetStudentsQuery(\"studentsList\", {\n      pollingInterval: 60000,\n      refetchOnFocus: true,\n      refetchOnMountOrArgChange: true\n  })\n\n    let content\n\n    if (isLoading) content = <p>Loading...</p>\n\n    if (isError) {\n        content = <p className=\"errmsg\">{error?.data?.message}</p>\n    }\n\n    if (isSuccess) {\n\n        const { ids } = students\n\n        const tableContent = ids?.length\n            ? ids.map(studentId => <Student key={studentId} studentId={studentId} />)\n            : null\n\n        content = (\n            <table className=\"table table--users\">\n                <thead className=\"table__thead\">\n                    <tr>\n                        <th scope=\"col\" className=\"table__th user__username\">Username</th>\n                        <th scope=\"col\" className=\"table__th user__edit\">Edit</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {tableContent}\n                </tbody>\n            </table>\n        )\n    }\n\n    return content\n}\nexport default StudentsList"],"mappings":";;AAAA,SAASA,mBAAmB,QAAQ,oBAAoB;AACxD,OAAOC,OAAO,MAAM,WAAW;AAAA;AAE/B,MAAMC,YAAY,GAAG,MAAM;EAAA;EAEvB,MAAM;IACFC,IAAI,EAAEC,QAAQ;IACdC,SAAS;IACTC,SAAS;IACTC,OAAO;IACPC;EACJ,CAAC,GAAGR,mBAAmB,CAAC,cAAc,EAAE;IACtCS,eAAe,EAAE,KAAK;IACtBC,cAAc,EAAE,IAAI;IACpBC,yBAAyB,EAAE;EAC/B,CAAC,CAAC;EAEA,IAAIC,OAAO;EAEX,IAAIP,SAAS,EAAEO,OAAO,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAiB;EAE1C,IAAIL,OAAO,EAAE;IAAA;IACTK,OAAO,gBAAG;MAAG,SAAS,EAAC,QAAQ;MAAA,UAAEJ,KAAK,aAALA,KAAK,sCAALA,KAAK,CAAEL,IAAI,gDAAX,YAAaU;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK;EAC9D;EAEA,IAAIP,SAAS,EAAE;IAEX,MAAM;MAAEQ;IAAI,CAAC,GAAGV,QAAQ;IAExB,MAAMW,YAAY,GAAGD,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEE,MAAM,GAC1BF,GAAG,CAACG,GAAG,CAACC,SAAS,iBAAI,QAAC,OAAO;MAAiB,SAAS,EAAEA;IAAU,GAAhCA,SAAS;MAAA;MAAA;MAAA;IAAA,QAA0B,CAAC,GACvE,IAAI;IAEVN,OAAO,gBACH;MAAO,SAAS,EAAC,oBAAoB;MAAA,wBACjC;QAAO,SAAS,EAAC,cAAc;QAAA,uBAC3B;UAAA,wBACI;YAAI,KAAK,EAAC,KAAK;YAAC,SAAS,EAAC,0BAA0B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAc,eAClE;YAAI,KAAK,EAAC,KAAK;YAAC,SAAS,EAAC,sBAAsB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAU;QAAA;UAAA;UAAA;UAAA;QAAA;MACzD;QAAA;QAAA;QAAA;MAAA,QACD,eACR;QAAA,UACKG;MAAY;QAAA;QAAA;QAAA;MAAA,QACT;IAAA;MAAA;MAAA;MAAA;IAAA,QAEf;EACL;EAEA,OAAOH,OAAO;AAClB,CAAC;AAAA,GA9CKV,YAAY;EAAA,QAQVF,mBAAmB;AAAA;AAAA,KARrBE,YAAY;AA+ClB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}