{"ast":null,"code":"import { apiSlice } from \"../../app/api/apiSlice\";\nimport { logOut } from \"./authSlice\";\nexport const authApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    login: builder.mutation({\n      query: credentials => ({\n        url: '/auth',\n        method: 'POST',\n        body: {\n          ...credentials\n        }\n      })\n    }),\n    sendLogout: builder.mutation({\n      query: () => ({\n        url: '/auth/logout',\n        method: 'POST'\n      }),\n      async onQueryStarted(arg, _ref) {\n        let {\n          dispatch,\n          queryFulfilled\n        } = _ref;\n        try {\n          console.log(\"gere\");\n          //const { data } = \n          await queryFulfilled;\n          //console.log(data)\n          dispatch(logOut());\n          dispatch(apiSlice.util.resetApiState());\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    }),\n    refresh: builder.mutation({\n      query: () => ({\n        url: '/auth/refresh',\n        method: 'GET'\n      })\n    })\n  })\n});\nexport const {\n  useLoginMutation,\n  useSendLogoutMutation,\n  useRefreshMutation\n} = authApiSlice;","map":{"version":3,"names":["apiSlice","logOut","authApiSlice","injectEndpoints","endpoints","builder","login","mutation","query","credentials","url","method","body","sendLogout","onQueryStarted","arg","dispatch","queryFulfilled","console","log","util","resetApiState","err","refresh","useLoginMutation","useSendLogoutMutation","useRefreshMutation"],"sources":["/Users/seifmohamed/Documents/webdev/TechNotes/front-end/my-app/src/features/auth/authApiSlice.js"],"sourcesContent":["import { apiSlice } from \"../../app/api/apiSlice\"\nimport { logOut } from \"./authSlice\"\n\nexport const authApiSlice = apiSlice.injectEndpoints({\n    endpoints: builder => ({\n        login: builder.mutation({\n            query: credentials => ({\n                url: '/auth',\n                method: 'POST',\n                body: { ...credentials }\n            })\n        }),\n        sendLogout: builder.mutation({\n            query: () => ({\n                url: '/auth/logout',\n                method: 'POST',\n            }),\n            async onQueryStarted(arg, { dispatch, queryFulfilled }) {\n                try {\n                    console.log(\"gere\");\n                    //const { data } = \n                    await queryFulfilled\n                    //console.log(data)\n                    dispatch(logOut())\n                    dispatch(apiSlice.util.resetApiState())\n                } catch (err) {\n                    console.log(err)\n                }\n            }\n        }),\n        refresh: builder.mutation({\n            query: () => ({\n                url: '/auth/refresh',\n                method: 'GET',\n            })\n        }),\n    })\n})\n\nexport const {\n    useLoginMutation,\n    useSendLogoutMutation,\n    useRefreshMutation,\n} = authApiSlice "],"mappings":"AAAA,SAASA,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,MAAM,QAAQ,aAAa;AAEpC,OAAO,MAAMC,YAAY,GAAGF,QAAQ,CAACG,eAAe,CAAC;EACjDC,SAAS,EAAEC,OAAO,KAAK;IACnBC,KAAK,EAAED,OAAO,CAACE,QAAQ,CAAC;MACpBC,KAAK,EAAEC,WAAW,KAAK;QACnBC,GAAG,EAAE,OAAO;QACZC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE;UAAE,GAAGH;QAAY;MAC3B,CAAC;IACL,CAAC,CAAC;IACFI,UAAU,EAAER,OAAO,CAACE,QAAQ,CAAC;MACzBC,KAAK,EAAE,OAAO;QACVE,GAAG,EAAE,cAAc;QACnBC,MAAM,EAAE;MACZ,CAAC,CAAC;MACF,MAAMG,cAAc,CAACC,GAAG,QAAgC;QAAA,IAA9B;UAAEC,QAAQ;UAAEC;QAAe,CAAC;QAClD,IAAI;UACAC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;UACnB;UACA,MAAMF,cAAc;UACpB;UACAD,QAAQ,CAACf,MAAM,EAAE,CAAC;UAClBe,QAAQ,CAAChB,QAAQ,CAACoB,IAAI,CAACC,aAAa,EAAE,CAAC;QAC3C,CAAC,CAAC,OAAOC,GAAG,EAAE;UACVJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;QACpB;MACJ;IACJ,CAAC,CAAC;IACFC,OAAO,EAAElB,OAAO,CAACE,QAAQ,CAAC;MACtBC,KAAK,EAAE,OAAO;QACVE,GAAG,EAAE,eAAe;QACpBC,MAAM,EAAE;MACZ,CAAC;IACL,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EACTa,gBAAgB;EAChBC,qBAAqB;EACrBC;AACJ,CAAC,GAAGxB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}