{"ast":null,"code":"var _jsxFileName = \"/Users/seifmohamed/Documents/webdev/TechNotes/front-end/my-app/src/features/tickets/EditTicket.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport EditTicketForm from \"./EditTicketForm\";\nimport { useGetTicketsQuery } from \"./ticketsApiSlice\";\nimport { useGetUsersQuery } from \"../users/usersApiSlice\";\nimport useAuth from \"../../hooks/useAuth\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport useTitle from \"../../hooks/useTitle\";\nimport { useGetStudentsQuery } from \"../students/studentsApiSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTicket = () => {\n  _s();\n  useTitle(\"techTickets: Edit Ticket\");\n  const {\n    id\n  } = useParams();\n  const {\n    username,\n    isManager,\n    isAdmin\n  } = useAuth();\n  const {\n    ticket\n  } = useGetTicketsQuery(\"ticketsList\", {\n    selectFromResult: _ref => {\n      let {\n        data\n      } = _ref;\n      return {\n        ticket: data === null || data === void 0 ? void 0 : data.entities[id]\n      };\n    }\n  });\n  const {\n    data: usersData,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetUsersQuery(\"usersList\", {\n    refetchOnFocus: true,\n    refetchOnMountOrArgChange: true\n  });\n  let content;\n  if (isLoading) content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 28\n  }, this);\n  if (isError) {\n    var _error$data;\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errmsg\",\n      children: error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }, this);\n  }\n  const users = [];\n  if (isSuccess) {\n    const {\n      ids,\n      entities\n    } = usersData;\n    console.log(entities);\n  }\n  const {\n    students\n  } = useGetStudentsQuery(\"studentsList\", {\n    selectFromResult: _ref2 => {\n      let {\n        data\n      } = _ref2;\n      return {\n        students: data === null || data === void 0 ? void 0 : data.ids.map(id => data === null || data === void 0 ? void 0 : data.entities[id])\n      };\n    }\n  });\n  if (!ticket || !(users !== null && users !== void 0 && users.length) || !(students !== null && students !== void 0 && students.length)) return /*#__PURE__*/_jsxDEV(PulseLoader, {\n    color: \"#FFF\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n  if (!isManager && !isAdmin) {\n    if (ticket.username !== username) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errmsg\",\n        children: \"No access\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this);\n    }\n  }\n  content = /*#__PURE__*/_jsxDEV(EditTicketForm, {\n    ticket: ticket,\n    users: users,\n    students: students\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n  return content;\n};\n_s(EditTicket, \"+Kg4YXxOW2iCnpRXlfMv1doGBcA=\", false, function () {\n  return [useTitle, useParams, useAuth, useGetTicketsQuery, useGetUsersQuery, useGetStudentsQuery];\n});\n_c = EditTicket;\nexport default EditTicket;\nvar _c;\n$RefreshReg$(_c, \"EditTicket\");","map":{"version":3,"names":["useParams","EditTicketForm","useGetTicketsQuery","useGetUsersQuery","useAuth","PulseLoader","useTitle","useGetStudentsQuery","EditTicket","id","username","isManager","isAdmin","ticket","selectFromResult","data","entities","usersData","isLoading","isSuccess","isError","error","refetchOnFocus","refetchOnMountOrArgChange","content","message","users","ids","console","log","students","map","length"],"sources":["/Users/seifmohamed/Documents/webdev/TechNotes/front-end/my-app/src/features/tickets/EditTicket.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport EditTicketForm from \"./EditTicketForm\";\nimport { useGetTicketsQuery } from \"./ticketsApiSlice\";\nimport { useGetUsersQuery } from \"../users/usersApiSlice\";\nimport useAuth from \"../../hooks/useAuth\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport useTitle from \"../../hooks/useTitle\";\nimport { useGetStudentsQuery } from \"../students/studentsApiSlice\";\n\nconst EditTicket = () => {\n  useTitle(\"techTickets: Edit Ticket\");\n\n  const { id } = useParams();\n\n  const { username, isManager, isAdmin } = useAuth();\n\n  const { ticket } = useGetTicketsQuery(\"ticketsList\", {\n    selectFromResult: ({ data }) => ({\n      ticket: data?.entities[id],\n    }),\n  });\n\n  const {\n    data: usersData,\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n  } = useGetUsersQuery(\"usersList\", {\n    refetchOnFocus: true,\n    refetchOnMountOrArgChange: true,\n  });\n  let content;\n  if (isLoading) content = <p>Loading...</p>;\n\n  if (isError) {\n    content = <p className=\"errmsg\">{error?.data?.message}</p>;\n  }\n  const users = [];\n  if (isSuccess){\n    const {ids, entities} = usersData;\n    console.log(entities)\n  }\n\n  const { students } = useGetStudentsQuery(\"studentsList\", {\n    selectFromResult: ({ data }) => ({\n      students: data?.ids.map((id) => data?.entities[id]),\n    }),\n  });\n\n  if (!ticket || !users?.length || !students?.length)\n    return <PulseLoader color={\"#FFF\"} />;\n\n  if (!isManager && !isAdmin) {\n    if (ticket.username !== username) {\n      return <p className=\"errmsg\">No access</p>;\n    }\n  }\n\n  content = (\n    <EditTicketForm ticket={ticket} users={users} students={students} />\n  );\n\n  return content;\n};\nexport default EditTicket;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}