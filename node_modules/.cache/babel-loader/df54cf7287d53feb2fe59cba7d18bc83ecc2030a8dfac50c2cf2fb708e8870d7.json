{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KillCursorsOperation = void 0;\nconst error_1 = require(\"../error\");\nconst operation_1 = require(\"./operation\");\nclass KillCursorsOperation extends operation_1.AbstractOperation {\n  constructor(cursorId, ns, server, options) {\n    super(options);\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n  execute(server, session, callback) {\n    if (server !== this.server) {\n      return callback(new error_1.MongoRuntimeError('Killcursor must run on the same server operation began on'));\n    }\n    const killCursors = this.ns.collection;\n    if (killCursors == null) {\n      // Cursors should have adopted the namespace returned by MongoDB\n      // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n      return callback(new error_1.MongoRuntimeError('A collection name must be determined before killCursors'));\n    }\n    const killCursorsCommand = {\n      killCursors,\n      cursors: [this.cursorId]\n    };\n    server.command(this.ns, killCursorsCommand, {\n      session\n    }, () => callback());\n  }\n}\nexports.KillCursorsOperation = KillCursorsOperation;\n(0, operation_1.defineAspects)(KillCursorsOperation, [operation_1.Aspect.MUST_SELECT_SAME_SERVER]);","map":{"version":3,"mappings":";;;;;;AACA;AAIA;AAYA,MAAaA,oBAAqB,SAAQC,6BAAiB;EAGzDC,YAAYC,QAAc,EAAEC,EAAoB,EAAEC,MAAc,EAAEC,OAAyB;IACzF,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACF,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACD,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACE,MAAM,GAAGA,MAAM;EACtB;EAEAE,OAAO,CAACF,MAAc,EAAEG,OAAkC,EAAEC,QAAwB;IAClF,IAAIJ,MAAM,KAAK,IAAI,CAACA,MAAM,EAAE;MAC1B,OAAOI,QAAQ,CACb,IAAIC,yBAAiB,CAAC,2DAA2D,CAAC,CACnF;;IAGH,MAAMC,WAAW,GAAG,IAAI,CAACP,EAAE,CAACQ,UAAU;IACtC,IAAID,WAAW,IAAI,IAAI,EAAE;MACvB;MACA;MACA,OAAOF,QAAQ,CACb,IAAIC,yBAAiB,CAAC,yDAAyD,CAAC,CACjF;;IAGH,MAAMG,kBAAkB,GAAuB;MAC7CF,WAAW;MACXG,OAAO,EAAE,CAAC,IAAI,CAACX,QAAQ;KACxB;IAEDE,MAAM,CAACU,OAAO,CAAC,IAAI,CAACX,EAAE,EAAES,kBAAkB,EAAE;MAAEL;IAAO,CAAE,EAAE,MAAMC,QAAQ,EAAE,CAAC;EAC5E;;AAhCFO;AAmCA,6BAAa,EAAChB,oBAAoB,EAAE,CAACC,kBAAM,CAACgB,uBAAuB,CAAC,CAAC","names":["KillCursorsOperation","operation_1","constructor","cursorId","ns","server","options","execute","session","callback","error_1","killCursors","collection","killCursorsCommand","cursors","command","exports","MUST_SELECT_SAME_SERVER"],"sources":["/Users/seifmohamed/Documents/webdev/node_modules/mongodb/src/operations/kill_cursors.ts"],"sourcesContent":["import type { Long } from '../bson';\nimport { MongoRuntimeError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback, MongoDBNamespace } from '../utils';\nimport { AbstractOperation, Aspect, defineAspects, OperationOptions } from './operation';\n\n/**\n * https://www.mongodb.com/docs/manual/reference/command/killCursors/\n * @internal\n */\ninterface KillCursorsCommand {\n  killCursors: string;\n  cursors: Long[];\n  comment?: unknown;\n}\n\nexport class KillCursorsOperation extends AbstractOperation {\n  cursorId: Long;\n\n  constructor(cursorId: Long, ns: MongoDBNamespace, server: Server, options: OperationOptions) {\n    super(options);\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n\n  execute(server: Server, session: ClientSession | undefined, callback: Callback<void>): void {\n    if (server !== this.server) {\n      return callback(\n        new MongoRuntimeError('Killcursor must run on the same server operation began on')\n      );\n    }\n\n    const killCursors = this.ns.collection;\n    if (killCursors == null) {\n      // Cursors should have adopted the namespace returned by MongoDB\n      // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n      return callback(\n        new MongoRuntimeError('A collection name must be determined before killCursors')\n      );\n    }\n\n    const killCursorsCommand: KillCursorsCommand = {\n      killCursors,\n      cursors: [this.cursorId]\n    };\n\n    server.command(this.ns, killCursorsCommand, { session }, () => callback());\n  }\n}\n\ndefineAspects(KillCursorsOperation, [Aspect.MUST_SELECT_SAME_SERVER]);\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}